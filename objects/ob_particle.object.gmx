<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///

vrad = 5
hrad = 3

burst_count = 3
burst_rate = 5
part_max = 20
emit = true

enum p {
    x, 
    y, 
    dx,
    dy,
    timeout,
    init_timeout,
    phase,
    visible,
    alive
}

for (var i=0; i&lt;part_max; i++) {
    part[i, p.x ] = 0
    part[i, p.y ] = 0
    part[i, p.dx] = 0
    part[i, p.dy] = 0
    part[i, p.timeout] = 0
    part[i, p.phase] = 0
    part[i, p.init_timeout] = 0
    part[i, p.visible] = false
    part[i, p.alive] = false
}    

event_perform(ev_alarm, 0)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
if emit
    alarm[0] = burst_rate

repeat (burst_count)
for (var j=0; j&lt;part_max; j++)
if not part[j, p.alive] {
    part[j, p.x] = x + random(hrad*2) - hrad
    part[j, p.y] = y + random(vrad*2) - vrad
    part[j, p.alive] = true
    part[j, p.visible] = true
    part[j, p.dx] = 0
    part[j, p.dy] = 1
    part[j, p.init_timeout] = 5    
    part[j, p.timeout] = part[j, p.init_timeout]
    part[j, p.phase] = 0
    break
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///

var _dead = true

for (var i=0; i&lt;part_max; i++)
if part[i, p.alive] {
    _dead = false
    part[i, p.timeout]--
    if part[i, p.timeout] &lt;= 0 {
        part[i, p.alive  ] = false
        part[i, p.visible] = false
    }
    
    part[i, p.x] += part[i, p.dx]
    part[i, p.y] += part[i, p.dy]    
}

if _dead instance_destroy()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
